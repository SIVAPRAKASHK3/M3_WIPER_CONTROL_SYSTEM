
ses.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000b38  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000ce0  08000ce0  00020010  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000ce0  08000ce0  00020010  2**0
                  CONTENTS
  4 .ARM          00000000  08000ce0  08000ce0  00020010  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000ce0  08000ce0  00020010  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000ce0  08000ce0  00010ce0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000ce4  08000ce4  00010ce4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000010  20000000  08000ce8  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00020010  2**0
                  CONTENTS
 10 .bss          0000001c  20000010  20000010  00020010  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000002c  2000002c  00020010  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00020010  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000bad  00000000  00000000  00020040  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000311  00000000  00000000  00020bed  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000f0  00000000  00000000  00020f00  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 000000c8  00000000  00000000  00020ff0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  000024b7  00000000  00000000  000210b8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00001193  00000000  00000000  0002356f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00009d17  00000000  00000000  00024702  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000050  00000000  00000000  0002e419  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000002f8  00000000  00000000  0002e46c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000010 	.word	0x20000010
 80001c4:	00000000 	.word	0x00000000
 80001c8:	08000cc8 	.word	0x08000cc8

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000014 	.word	0x20000014
 80001e4:	08000cc8 	.word	0x08000cc8

080001e8 <GPIO_PeriClockControl>:
 * @return            -  none
 *
 * @Note              -  none
 */
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 80001e8:	b480      	push	{r7}
 80001ea:	b083      	sub	sp, #12
 80001ec:	af00      	add	r7, sp, #0
 80001ee:	6078      	str	r0, [r7, #4]
 80001f0:	460b      	mov	r3, r1
 80001f2:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 80001f4:	78fb      	ldrb	r3, [r7, #3]
 80001f6:	2b01      	cmp	r3, #1
 80001f8:	d161      	bne.n	80002be <GPIO_PeriClockControl+0xd6>
	{
		if(pGPIOx == GPIOA)
 80001fa:	687b      	ldr	r3, [r7, #4]
 80001fc:	4a33      	ldr	r2, [pc, #204]	; (80002cc <GPIO_PeriClockControl+0xe4>)
 80001fe:	4293      	cmp	r3, r2
 8000200:	d106      	bne.n	8000210 <GPIO_PeriClockControl+0x28>
		{
			GPIOA_PCLK_EN();
 8000202:	4b33      	ldr	r3, [pc, #204]	; (80002d0 <GPIO_PeriClockControl+0xe8>)
 8000204:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000206:	4a32      	ldr	r2, [pc, #200]	; (80002d0 <GPIO_PeriClockControl+0xe8>)
 8000208:	f043 0301 	orr.w	r3, r3, #1
 800020c:	6313      	str	r3, [r2, #48]	; 0x30
		{
			GPIOI_PCLK_DI();
		}*/
	}

}
 800020e:	e056      	b.n	80002be <GPIO_PeriClockControl+0xd6>
		}else if (pGPIOx == GPIOB)
 8000210:	687b      	ldr	r3, [r7, #4]
 8000212:	4a30      	ldr	r2, [pc, #192]	; (80002d4 <GPIO_PeriClockControl+0xec>)
 8000214:	4293      	cmp	r3, r2
 8000216:	d106      	bne.n	8000226 <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 8000218:	4b2d      	ldr	r3, [pc, #180]	; (80002d0 <GPIO_PeriClockControl+0xe8>)
 800021a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800021c:	4a2c      	ldr	r2, [pc, #176]	; (80002d0 <GPIO_PeriClockControl+0xe8>)
 800021e:	f043 0302 	orr.w	r3, r3, #2
 8000222:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000224:	e04b      	b.n	80002be <GPIO_PeriClockControl+0xd6>
		}else if (pGPIOx == GPIOC)
 8000226:	687b      	ldr	r3, [r7, #4]
 8000228:	4a2b      	ldr	r2, [pc, #172]	; (80002d8 <GPIO_PeriClockControl+0xf0>)
 800022a:	4293      	cmp	r3, r2
 800022c:	d106      	bne.n	800023c <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 800022e:	4b28      	ldr	r3, [pc, #160]	; (80002d0 <GPIO_PeriClockControl+0xe8>)
 8000230:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000232:	4a27      	ldr	r2, [pc, #156]	; (80002d0 <GPIO_PeriClockControl+0xe8>)
 8000234:	f043 0304 	orr.w	r3, r3, #4
 8000238:	6313      	str	r3, [r2, #48]	; 0x30
}
 800023a:	e040      	b.n	80002be <GPIO_PeriClockControl+0xd6>
		}else if (pGPIOx == GPIOD)
 800023c:	687b      	ldr	r3, [r7, #4]
 800023e:	4a27      	ldr	r2, [pc, #156]	; (80002dc <GPIO_PeriClockControl+0xf4>)
 8000240:	4293      	cmp	r3, r2
 8000242:	d106      	bne.n	8000252 <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 8000244:	4b22      	ldr	r3, [pc, #136]	; (80002d0 <GPIO_PeriClockControl+0xe8>)
 8000246:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000248:	4a21      	ldr	r2, [pc, #132]	; (80002d0 <GPIO_PeriClockControl+0xe8>)
 800024a:	f043 0308 	orr.w	r3, r3, #8
 800024e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000250:	e035      	b.n	80002be <GPIO_PeriClockControl+0xd6>
		}else if (pGPIOx == GPIOE)
 8000252:	687b      	ldr	r3, [r7, #4]
 8000254:	4a22      	ldr	r2, [pc, #136]	; (80002e0 <GPIO_PeriClockControl+0xf8>)
 8000256:	4293      	cmp	r3, r2
 8000258:	d106      	bne.n	8000268 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 800025a:	4b1d      	ldr	r3, [pc, #116]	; (80002d0 <GPIO_PeriClockControl+0xe8>)
 800025c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800025e:	4a1c      	ldr	r2, [pc, #112]	; (80002d0 <GPIO_PeriClockControl+0xe8>)
 8000260:	f043 0310 	orr.w	r3, r3, #16
 8000264:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000266:	e02a      	b.n	80002be <GPIO_PeriClockControl+0xd6>
		}else if (pGPIOx == GPIOF)
 8000268:	687b      	ldr	r3, [r7, #4]
 800026a:	4a1e      	ldr	r2, [pc, #120]	; (80002e4 <GPIO_PeriClockControl+0xfc>)
 800026c:	4293      	cmp	r3, r2
 800026e:	d106      	bne.n	800027e <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 8000270:	4b17      	ldr	r3, [pc, #92]	; (80002d0 <GPIO_PeriClockControl+0xe8>)
 8000272:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000274:	4a16      	ldr	r2, [pc, #88]	; (80002d0 <GPIO_PeriClockControl+0xe8>)
 8000276:	f043 0320 	orr.w	r3, r3, #32
 800027a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800027c:	e01f      	b.n	80002be <GPIO_PeriClockControl+0xd6>
		}else if (pGPIOx == GPIOG)
 800027e:	687b      	ldr	r3, [r7, #4]
 8000280:	4a19      	ldr	r2, [pc, #100]	; (80002e8 <GPIO_PeriClockControl+0x100>)
 8000282:	4293      	cmp	r3, r2
 8000284:	d106      	bne.n	8000294 <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 8000286:	4b12      	ldr	r3, [pc, #72]	; (80002d0 <GPIO_PeriClockControl+0xe8>)
 8000288:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800028a:	4a11      	ldr	r2, [pc, #68]	; (80002d0 <GPIO_PeriClockControl+0xe8>)
 800028c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000290:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000292:	e014      	b.n	80002be <GPIO_PeriClockControl+0xd6>
		}else if (pGPIOx == GPIOH)
 8000294:	687b      	ldr	r3, [r7, #4]
 8000296:	4a15      	ldr	r2, [pc, #84]	; (80002ec <GPIO_PeriClockControl+0x104>)
 8000298:	4293      	cmp	r3, r2
 800029a:	d106      	bne.n	80002aa <GPIO_PeriClockControl+0xc2>
			GPIOH_PCLK_EN();
 800029c:	4b0c      	ldr	r3, [pc, #48]	; (80002d0 <GPIO_PeriClockControl+0xe8>)
 800029e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002a0:	4a0b      	ldr	r2, [pc, #44]	; (80002d0 <GPIO_PeriClockControl+0xe8>)
 80002a2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80002a6:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002a8:	e009      	b.n	80002be <GPIO_PeriClockControl+0xd6>
		}else if (pGPIOx == GPIOI)
 80002aa:	687b      	ldr	r3, [r7, #4]
 80002ac:	4a10      	ldr	r2, [pc, #64]	; (80002f0 <GPIO_PeriClockControl+0x108>)
 80002ae:	4293      	cmp	r3, r2
 80002b0:	d105      	bne.n	80002be <GPIO_PeriClockControl+0xd6>
			GPIOI_PCLK_EN();
 80002b2:	4b07      	ldr	r3, [pc, #28]	; (80002d0 <GPIO_PeriClockControl+0xe8>)
 80002b4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002b6:	4a06      	ldr	r2, [pc, #24]	; (80002d0 <GPIO_PeriClockControl+0xe8>)
 80002b8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80002bc:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002be:	bf00      	nop
 80002c0:	370c      	adds	r7, #12
 80002c2:	46bd      	mov	sp, r7
 80002c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002c8:	4770      	bx	lr
 80002ca:	bf00      	nop
 80002cc:	40020000 	.word	0x40020000
 80002d0:	40023800 	.word	0x40023800
 80002d4:	40020400 	.word	0x40020400
 80002d8:	40020800 	.word	0x40020800
 80002dc:	40020c00 	.word	0x40020c00
 80002e0:	40021000 	.word	0x40021000
 80002e4:	40021400 	.word	0x40021400
 80002e8:	40021800 	.word	0x40021800
 80002ec:	40021c00 	.word	0x40021c00
 80002f0:	40022000 	.word	0x40022000

080002f4 <GPIO_Init>:
 * @return            -
 *
 * @Note              -
 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 80002f4:	b580      	push	{r7, lr}
 80002f6:	b086      	sub	sp, #24
 80002f8:	af00      	add	r7, sp, #0
 80002fa:	6078      	str	r0, [r7, #4]
	 uint32_t temp=0; //temp. register
 80002fc:	2300      	movs	r3, #0
 80002fe:	617b      	str	r3, [r7, #20]

	 //enable the peripheral clock

	 GPIO_PeriClockControl(pGPIOHandle->pGPIOx, ENABLE);
 8000300:	687b      	ldr	r3, [r7, #4]
 8000302:	681b      	ldr	r3, [r3, #0]
 8000304:	2101      	movs	r1, #1
 8000306:	4618      	mov	r0, r3
 8000308:	f7ff ff6e 	bl	80001e8 <GPIO_PeriClockControl>

	//1 . configure the mode of gpio pin

	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 800030c:	687b      	ldr	r3, [r7, #4]
 800030e:	795b      	ldrb	r3, [r3, #5]
 8000310:	2b03      	cmp	r3, #3
 8000312:	d820      	bhi.n	8000356 <GPIO_Init+0x62>
	{
		//the non interrupt mode
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber ) );
 8000314:	687b      	ldr	r3, [r7, #4]
 8000316:	795b      	ldrb	r3, [r3, #5]
 8000318:	461a      	mov	r2, r3
 800031a:	687b      	ldr	r3, [r7, #4]
 800031c:	791b      	ldrb	r3, [r3, #4]
 800031e:	005b      	lsls	r3, r3, #1
 8000320:	fa02 f303 	lsl.w	r3, r2, r3
 8000324:	617b      	str	r3, [r7, #20]
			pGPIOHandle->pGPIOx->MODER &= ~( 0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //clearing
 8000326:	687b      	ldr	r3, [r7, #4]
 8000328:	681b      	ldr	r3, [r3, #0]
 800032a:	681a      	ldr	r2, [r3, #0]
 800032c:	687b      	ldr	r3, [r7, #4]
 800032e:	791b      	ldrb	r3, [r3, #4]
 8000330:	005b      	lsls	r3, r3, #1
 8000332:	2103      	movs	r1, #3
 8000334:	fa01 f303 	lsl.w	r3, r1, r3
 8000338:	43db      	mvns	r3, r3
 800033a:	4619      	mov	r1, r3
 800033c:	687b      	ldr	r3, [r7, #4]
 800033e:	681b      	ldr	r3, [r3, #0]
 8000340:	400a      	ands	r2, r1
 8000342:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp; //setting
 8000344:	687b      	ldr	r3, [r7, #4]
 8000346:	681b      	ldr	r3, [r3, #0]
 8000348:	6819      	ldr	r1, [r3, #0]
 800034a:	687b      	ldr	r3, [r7, #4]
 800034c:	681b      	ldr	r3, [r3, #0]
 800034e:	697a      	ldr	r2, [r7, #20]
 8000350:	430a      	orrs	r2, r1
 8000352:	601a      	str	r2, [r3, #0]
 8000354:	e0cb      	b.n	80004ee <GPIO_Init+0x1fa>

	}else
	{
		//this part will code later . ( interrupt mode)
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode ==GPIO_MODE_IT_FT )
 8000356:	687b      	ldr	r3, [r7, #4]
 8000358:	795b      	ldrb	r3, [r3, #5]
 800035a:	2b04      	cmp	r3, #4
 800035c:	d117      	bne.n	800038e <GPIO_Init+0x9a>
		{
			//1. configure the FTSR
			EXTI->FTSR |= ( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800035e:	4b4b      	ldr	r3, [pc, #300]	; (800048c <GPIO_Init+0x198>)
 8000360:	68db      	ldr	r3, [r3, #12]
 8000362:	687a      	ldr	r2, [r7, #4]
 8000364:	7912      	ldrb	r2, [r2, #4]
 8000366:	4611      	mov	r1, r2
 8000368:	2201      	movs	r2, #1
 800036a:	408a      	lsls	r2, r1
 800036c:	4611      	mov	r1, r2
 800036e:	4a47      	ldr	r2, [pc, #284]	; (800048c <GPIO_Init+0x198>)
 8000370:	430b      	orrs	r3, r1
 8000372:	60d3      	str	r3, [r2, #12]
			//Clear the corresponding RTSR bit
			EXTI->RTSR &= ~( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000374:	4b45      	ldr	r3, [pc, #276]	; (800048c <GPIO_Init+0x198>)
 8000376:	689b      	ldr	r3, [r3, #8]
 8000378:	687a      	ldr	r2, [r7, #4]
 800037a:	7912      	ldrb	r2, [r2, #4]
 800037c:	4611      	mov	r1, r2
 800037e:	2201      	movs	r2, #1
 8000380:	408a      	lsls	r2, r1
 8000382:	43d2      	mvns	r2, r2
 8000384:	4611      	mov	r1, r2
 8000386:	4a41      	ldr	r2, [pc, #260]	; (800048c <GPIO_Init+0x198>)
 8000388:	400b      	ands	r3, r1
 800038a:	6093      	str	r3, [r2, #8]
 800038c:	e035      	b.n	80003fa <GPIO_Init+0x106>

		}else if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode ==GPIO_MODE_IT_RT )
 800038e:	687b      	ldr	r3, [r7, #4]
 8000390:	795b      	ldrb	r3, [r3, #5]
 8000392:	2b05      	cmp	r3, #5
 8000394:	d117      	bne.n	80003c6 <GPIO_Init+0xd2>
		{
			//1 . configure the RTSR
			EXTI->RTSR |= ( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000396:	4b3d      	ldr	r3, [pc, #244]	; (800048c <GPIO_Init+0x198>)
 8000398:	689b      	ldr	r3, [r3, #8]
 800039a:	687a      	ldr	r2, [r7, #4]
 800039c:	7912      	ldrb	r2, [r2, #4]
 800039e:	4611      	mov	r1, r2
 80003a0:	2201      	movs	r2, #1
 80003a2:	408a      	lsls	r2, r1
 80003a4:	4611      	mov	r1, r2
 80003a6:	4a39      	ldr	r2, [pc, #228]	; (800048c <GPIO_Init+0x198>)
 80003a8:	430b      	orrs	r3, r1
 80003aa:	6093      	str	r3, [r2, #8]
			//Clear the corresponding RTSR bit
			EXTI->FTSR &= ~( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003ac:	4b37      	ldr	r3, [pc, #220]	; (800048c <GPIO_Init+0x198>)
 80003ae:	68db      	ldr	r3, [r3, #12]
 80003b0:	687a      	ldr	r2, [r7, #4]
 80003b2:	7912      	ldrb	r2, [r2, #4]
 80003b4:	4611      	mov	r1, r2
 80003b6:	2201      	movs	r2, #1
 80003b8:	408a      	lsls	r2, r1
 80003ba:	43d2      	mvns	r2, r2
 80003bc:	4611      	mov	r1, r2
 80003be:	4a33      	ldr	r2, [pc, #204]	; (800048c <GPIO_Init+0x198>)
 80003c0:	400b      	ands	r3, r1
 80003c2:	60d3      	str	r3, [r2, #12]
 80003c4:	e019      	b.n	80003fa <GPIO_Init+0x106>

		}else if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT )
 80003c6:	687b      	ldr	r3, [r7, #4]
 80003c8:	795b      	ldrb	r3, [r3, #5]
 80003ca:	2b06      	cmp	r3, #6
 80003cc:	d115      	bne.n	80003fa <GPIO_Init+0x106>
		{
			//1. configure both FTSR and RTSR
			EXTI->RTSR |= ( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003ce:	4b2f      	ldr	r3, [pc, #188]	; (800048c <GPIO_Init+0x198>)
 80003d0:	689b      	ldr	r3, [r3, #8]
 80003d2:	687a      	ldr	r2, [r7, #4]
 80003d4:	7912      	ldrb	r2, [r2, #4]
 80003d6:	4611      	mov	r1, r2
 80003d8:	2201      	movs	r2, #1
 80003da:	408a      	lsls	r2, r1
 80003dc:	4611      	mov	r1, r2
 80003de:	4a2b      	ldr	r2, [pc, #172]	; (800048c <GPIO_Init+0x198>)
 80003e0:	430b      	orrs	r3, r1
 80003e2:	6093      	str	r3, [r2, #8]
			//Clear the corresponding RTSR bit
			EXTI->FTSR |= ( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003e4:	4b29      	ldr	r3, [pc, #164]	; (800048c <GPIO_Init+0x198>)
 80003e6:	68db      	ldr	r3, [r3, #12]
 80003e8:	687a      	ldr	r2, [r7, #4]
 80003ea:	7912      	ldrb	r2, [r2, #4]
 80003ec:	4611      	mov	r1, r2
 80003ee:	2201      	movs	r2, #1
 80003f0:	408a      	lsls	r2, r1
 80003f2:	4611      	mov	r1, r2
 80003f4:	4a25      	ldr	r2, [pc, #148]	; (800048c <GPIO_Init+0x198>)
 80003f6:	430b      	orrs	r3, r1
 80003f8:	60d3      	str	r3, [r2, #12]
		}

		//2. configure the GPIO port selection in SYSCFG_EXTICR
		uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4 ;
 80003fa:	687b      	ldr	r3, [r7, #4]
 80003fc:	791b      	ldrb	r3, [r3, #4]
 80003fe:	089b      	lsrs	r3, r3, #2
 8000400:	74fb      	strb	r3, [r7, #19]
		uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4;
 8000402:	687b      	ldr	r3, [r7, #4]
 8000404:	791b      	ldrb	r3, [r3, #4]
 8000406:	f003 0303 	and.w	r3, r3, #3
 800040a:	74bb      	strb	r3, [r7, #18]
		uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 800040c:	687b      	ldr	r3, [r7, #4]
 800040e:	681b      	ldr	r3, [r3, #0]
 8000410:	4a1f      	ldr	r2, [pc, #124]	; (8000490 <GPIO_Init+0x19c>)
 8000412:	4293      	cmp	r3, r2
 8000414:	d04e      	beq.n	80004b4 <GPIO_Init+0x1c0>
 8000416:	687b      	ldr	r3, [r7, #4]
 8000418:	681b      	ldr	r3, [r3, #0]
 800041a:	4a1e      	ldr	r2, [pc, #120]	; (8000494 <GPIO_Init+0x1a0>)
 800041c:	4293      	cmp	r3, r2
 800041e:	d032      	beq.n	8000486 <GPIO_Init+0x192>
 8000420:	687b      	ldr	r3, [r7, #4]
 8000422:	681b      	ldr	r3, [r3, #0]
 8000424:	4a1c      	ldr	r2, [pc, #112]	; (8000498 <GPIO_Init+0x1a4>)
 8000426:	4293      	cmp	r3, r2
 8000428:	d02b      	beq.n	8000482 <GPIO_Init+0x18e>
 800042a:	687b      	ldr	r3, [r7, #4]
 800042c:	681b      	ldr	r3, [r3, #0]
 800042e:	4a1b      	ldr	r2, [pc, #108]	; (800049c <GPIO_Init+0x1a8>)
 8000430:	4293      	cmp	r3, r2
 8000432:	d024      	beq.n	800047e <GPIO_Init+0x18a>
 8000434:	687b      	ldr	r3, [r7, #4]
 8000436:	681b      	ldr	r3, [r3, #0]
 8000438:	4a19      	ldr	r2, [pc, #100]	; (80004a0 <GPIO_Init+0x1ac>)
 800043a:	4293      	cmp	r3, r2
 800043c:	d01d      	beq.n	800047a <GPIO_Init+0x186>
 800043e:	687b      	ldr	r3, [r7, #4]
 8000440:	681b      	ldr	r3, [r3, #0]
 8000442:	4a18      	ldr	r2, [pc, #96]	; (80004a4 <GPIO_Init+0x1b0>)
 8000444:	4293      	cmp	r3, r2
 8000446:	d016      	beq.n	8000476 <GPIO_Init+0x182>
 8000448:	687b      	ldr	r3, [r7, #4]
 800044a:	681b      	ldr	r3, [r3, #0]
 800044c:	4a16      	ldr	r2, [pc, #88]	; (80004a8 <GPIO_Init+0x1b4>)
 800044e:	4293      	cmp	r3, r2
 8000450:	d00f      	beq.n	8000472 <GPIO_Init+0x17e>
 8000452:	687b      	ldr	r3, [r7, #4]
 8000454:	681b      	ldr	r3, [r3, #0]
 8000456:	4a15      	ldr	r2, [pc, #84]	; (80004ac <GPIO_Init+0x1b8>)
 8000458:	4293      	cmp	r3, r2
 800045a:	d008      	beq.n	800046e <GPIO_Init+0x17a>
 800045c:	687b      	ldr	r3, [r7, #4]
 800045e:	681b      	ldr	r3, [r3, #0]
 8000460:	4a13      	ldr	r2, [pc, #76]	; (80004b0 <GPIO_Init+0x1bc>)
 8000462:	4293      	cmp	r3, r2
 8000464:	d101      	bne.n	800046a <GPIO_Init+0x176>
 8000466:	2308      	movs	r3, #8
 8000468:	e025      	b.n	80004b6 <GPIO_Init+0x1c2>
 800046a:	2300      	movs	r3, #0
 800046c:	e023      	b.n	80004b6 <GPIO_Init+0x1c2>
 800046e:	2307      	movs	r3, #7
 8000470:	e021      	b.n	80004b6 <GPIO_Init+0x1c2>
 8000472:	2306      	movs	r3, #6
 8000474:	e01f      	b.n	80004b6 <GPIO_Init+0x1c2>
 8000476:	2305      	movs	r3, #5
 8000478:	e01d      	b.n	80004b6 <GPIO_Init+0x1c2>
 800047a:	2304      	movs	r3, #4
 800047c:	e01b      	b.n	80004b6 <GPIO_Init+0x1c2>
 800047e:	2303      	movs	r3, #3
 8000480:	e019      	b.n	80004b6 <GPIO_Init+0x1c2>
 8000482:	2302      	movs	r3, #2
 8000484:	e017      	b.n	80004b6 <GPIO_Init+0x1c2>
 8000486:	2301      	movs	r3, #1
 8000488:	e015      	b.n	80004b6 <GPIO_Init+0x1c2>
 800048a:	bf00      	nop
 800048c:	40013c00 	.word	0x40013c00
 8000490:	40020000 	.word	0x40020000
 8000494:	40020400 	.word	0x40020400
 8000498:	40020800 	.word	0x40020800
 800049c:	40020c00 	.word	0x40020c00
 80004a0:	40021000 	.word	0x40021000
 80004a4:	40021400 	.word	0x40021400
 80004a8:	40021800 	.word	0x40021800
 80004ac:	40021c00 	.word	0x40021c00
 80004b0:	40022000 	.word	0x40022000
 80004b4:	2300      	movs	r3, #0
 80004b6:	747b      	strb	r3, [r7, #17]
		SYSCFG_PCLK_EN();
 80004b8:	4b59      	ldr	r3, [pc, #356]	; (8000620 <GPIO_Init+0x32c>)
 80004ba:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80004bc:	4a58      	ldr	r2, [pc, #352]	; (8000620 <GPIO_Init+0x32c>)
 80004be:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80004c2:	6453      	str	r3, [r2, #68]	; 0x44
		SYSCFG->EXTICR[temp1] = portcode << ( temp2 * 4);
 80004c4:	7c7a      	ldrb	r2, [r7, #17]
 80004c6:	7cbb      	ldrb	r3, [r7, #18]
 80004c8:	009b      	lsls	r3, r3, #2
 80004ca:	fa02 f103 	lsl.w	r1, r2, r3
 80004ce:	4a55      	ldr	r2, [pc, #340]	; (8000624 <GPIO_Init+0x330>)
 80004d0:	7cfb      	ldrb	r3, [r7, #19]
 80004d2:	3302      	adds	r3, #2
 80004d4:	f842 1023 	str.w	r1, [r2, r3, lsl #2]

		//3 . enable the exti interrupt delivery using IMR
		EXTI->IMR |= 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber;
 80004d8:	4b53      	ldr	r3, [pc, #332]	; (8000628 <GPIO_Init+0x334>)
 80004da:	681b      	ldr	r3, [r3, #0]
 80004dc:	687a      	ldr	r2, [r7, #4]
 80004de:	7912      	ldrb	r2, [r2, #4]
 80004e0:	4611      	mov	r1, r2
 80004e2:	2201      	movs	r2, #1
 80004e4:	408a      	lsls	r2, r1
 80004e6:	4611      	mov	r1, r2
 80004e8:	4a4f      	ldr	r2, [pc, #316]	; (8000628 <GPIO_Init+0x334>)
 80004ea:	430b      	orrs	r3, r1
 80004ec:	6013      	str	r3, [r2, #0]
	}

	//2. configure the speed
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) );
 80004ee:	687b      	ldr	r3, [r7, #4]
 80004f0:	799b      	ldrb	r3, [r3, #6]
 80004f2:	461a      	mov	r2, r3
 80004f4:	687b      	ldr	r3, [r7, #4]
 80004f6:	791b      	ldrb	r3, [r3, #4]
 80004f8:	005b      	lsls	r3, r3, #1
 80004fa:	fa02 f303 	lsl.w	r3, r2, r3
 80004fe:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~( 0x3 << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //clearing
 8000500:	687b      	ldr	r3, [r7, #4]
 8000502:	681b      	ldr	r3, [r3, #0]
 8000504:	689a      	ldr	r2, [r3, #8]
 8000506:	687b      	ldr	r3, [r7, #4]
 8000508:	791b      	ldrb	r3, [r3, #4]
 800050a:	005b      	lsls	r3, r3, #1
 800050c:	2103      	movs	r1, #3
 800050e:	fa01 f303 	lsl.w	r3, r1, r3
 8000512:	43db      	mvns	r3, r3
 8000514:	4619      	mov	r1, r3
 8000516:	687b      	ldr	r3, [r7, #4]
 8000518:	681b      	ldr	r3, [r3, #0]
 800051a:	400a      	ands	r2, r1
 800051c:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 800051e:	687b      	ldr	r3, [r7, #4]
 8000520:	681b      	ldr	r3, [r3, #0]
 8000522:	6899      	ldr	r1, [r3, #8]
 8000524:	687b      	ldr	r3, [r7, #4]
 8000526:	681b      	ldr	r3, [r3, #0]
 8000528:	697a      	ldr	r2, [r7, #20]
 800052a:	430a      	orrs	r2, r1
 800052c:	609a      	str	r2, [r3, #8]

	//3. configure the pupd settings
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) );
 800052e:	687b      	ldr	r3, [r7, #4]
 8000530:	79db      	ldrb	r3, [r3, #7]
 8000532:	461a      	mov	r2, r3
 8000534:	687b      	ldr	r3, [r7, #4]
 8000536:	791b      	ldrb	r3, [r3, #4]
 8000538:	005b      	lsls	r3, r3, #1
 800053a:	fa02 f303 	lsl.w	r3, r2, r3
 800053e:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->PUPDR &= ~( 0x3 << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //clearing
 8000540:	687b      	ldr	r3, [r7, #4]
 8000542:	681b      	ldr	r3, [r3, #0]
 8000544:	68da      	ldr	r2, [r3, #12]
 8000546:	687b      	ldr	r3, [r7, #4]
 8000548:	791b      	ldrb	r3, [r3, #4]
 800054a:	005b      	lsls	r3, r3, #1
 800054c:	2103      	movs	r1, #3
 800054e:	fa01 f303 	lsl.w	r3, r1, r3
 8000552:	43db      	mvns	r3, r3
 8000554:	4619      	mov	r1, r3
 8000556:	687b      	ldr	r3, [r7, #4]
 8000558:	681b      	ldr	r3, [r3, #0]
 800055a:	400a      	ands	r2, r1
 800055c:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 800055e:	687b      	ldr	r3, [r7, #4]
 8000560:	681b      	ldr	r3, [r3, #0]
 8000562:	68d9      	ldr	r1, [r3, #12]
 8000564:	687b      	ldr	r3, [r7, #4]
 8000566:	681b      	ldr	r3, [r3, #0]
 8000568:	697a      	ldr	r2, [r7, #20]
 800056a:	430a      	orrs	r2, r1
 800056c:	60da      	str	r2, [r3, #12]


	//4. configure the optype
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber );
 800056e:	687b      	ldr	r3, [r7, #4]
 8000570:	7a1b      	ldrb	r3, [r3, #8]
 8000572:	461a      	mov	r2, r3
 8000574:	687b      	ldr	r3, [r7, #4]
 8000576:	791b      	ldrb	r3, [r3, #4]
 8000578:	fa02 f303 	lsl.w	r3, r2, r3
 800057c:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OTYPER &= ~( 0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); //clearing
 800057e:	687b      	ldr	r3, [r7, #4]
 8000580:	681b      	ldr	r3, [r3, #0]
 8000582:	685a      	ldr	r2, [r3, #4]
 8000584:	687b      	ldr	r3, [r7, #4]
 8000586:	791b      	ldrb	r3, [r3, #4]
 8000588:	4619      	mov	r1, r3
 800058a:	2301      	movs	r3, #1
 800058c:	408b      	lsls	r3, r1
 800058e:	43db      	mvns	r3, r3
 8000590:	4619      	mov	r1, r3
 8000592:	687b      	ldr	r3, [r7, #4]
 8000594:	681b      	ldr	r3, [r3, #0]
 8000596:	400a      	ands	r2, r1
 8000598:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 800059a:	687b      	ldr	r3, [r7, #4]
 800059c:	681b      	ldr	r3, [r3, #0]
 800059e:	6859      	ldr	r1, [r3, #4]
 80005a0:	687b      	ldr	r3, [r7, #4]
 80005a2:	681b      	ldr	r3, [r3, #0]
 80005a4:	697a      	ldr	r2, [r7, #20]
 80005a6:	430a      	orrs	r2, r1
 80005a8:	605a      	str	r2, [r3, #4]

	//5. configure the alt functionality
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN)
 80005aa:	687b      	ldr	r3, [r7, #4]
 80005ac:	795b      	ldrb	r3, [r3, #5]
 80005ae:	2b02      	cmp	r3, #2
 80005b0:	d131      	bne.n	8000616 <GPIO_Init+0x322>
	{
		//configure the alt function registers.
		uint8_t temp1, temp2;

		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 80005b2:	687b      	ldr	r3, [r7, #4]
 80005b4:	791b      	ldrb	r3, [r3, #4]
 80005b6:	08db      	lsrs	r3, r3, #3
 80005b8:	743b      	strb	r3, [r7, #16]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber  % 8;
 80005ba:	687b      	ldr	r3, [r7, #4]
 80005bc:	791b      	ldrb	r3, [r3, #4]
 80005be:	f003 0307 	and.w	r3, r3, #7
 80005c2:	73fb      	strb	r3, [r7, #15]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << ( 4 * temp2 ) ); //clearing
 80005c4:	687b      	ldr	r3, [r7, #4]
 80005c6:	681b      	ldr	r3, [r3, #0]
 80005c8:	7c3a      	ldrb	r2, [r7, #16]
 80005ca:	3208      	adds	r2, #8
 80005cc:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80005d0:	7bfb      	ldrb	r3, [r7, #15]
 80005d2:	009b      	lsls	r3, r3, #2
 80005d4:	220f      	movs	r2, #15
 80005d6:	fa02 f303 	lsl.w	r3, r2, r3
 80005da:	43db      	mvns	r3, r3
 80005dc:	4618      	mov	r0, r3
 80005de:	687b      	ldr	r3, [r7, #4]
 80005e0:	681b      	ldr	r3, [r3, #0]
 80005e2:	7c3a      	ldrb	r2, [r7, #16]
 80005e4:	4001      	ands	r1, r0
 80005e6:	3208      	adds	r2, #8
 80005e8:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << ( 4 * temp2 ) );
 80005ec:	687b      	ldr	r3, [r7, #4]
 80005ee:	681b      	ldr	r3, [r3, #0]
 80005f0:	7c3a      	ldrb	r2, [r7, #16]
 80005f2:	3208      	adds	r2, #8
 80005f4:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80005f8:	687b      	ldr	r3, [r7, #4]
 80005fa:	7a5b      	ldrb	r3, [r3, #9]
 80005fc:	461a      	mov	r2, r3
 80005fe:	7bfb      	ldrb	r3, [r7, #15]
 8000600:	009b      	lsls	r3, r3, #2
 8000602:	fa02 f303 	lsl.w	r3, r2, r3
 8000606:	4618      	mov	r0, r3
 8000608:	687b      	ldr	r3, [r7, #4]
 800060a:	681b      	ldr	r3, [r3, #0]
 800060c:	7c3a      	ldrb	r2, [r7, #16]
 800060e:	4301      	orrs	r1, r0
 8000610:	3208      	adds	r2, #8
 8000612:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}

}
 8000616:	bf00      	nop
 8000618:	3718      	adds	r7, #24
 800061a:	46bd      	mov	sp, r7
 800061c:	bd80      	pop	{r7, pc}
 800061e:	bf00      	nop
 8000620:	40023800 	.word	0x40023800
 8000624:	40013800 	.word	0x40013800
 8000628:	40013c00 	.word	0x40013c00

0800062c <GPIO_ReadFromInputPin>:
 * @return            -   0 or 1
 *
 * @Note              -
 */
uint8_t GPIO_ReadFromInputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 800062c:	b480      	push	{r7}
 800062e:	b085      	sub	sp, #20
 8000630:	af00      	add	r7, sp, #0
 8000632:	6078      	str	r0, [r7, #4]
 8000634:	460b      	mov	r3, r1
 8000636:	70fb      	strb	r3, [r7, #3]
   uint8_t value;

   value = (uint8_t )((pGPIOx->IDR  >> PinNumber) & 0x00000001 ) ;
 8000638:	687b      	ldr	r3, [r7, #4]
 800063a:	691a      	ldr	r2, [r3, #16]
 800063c:	78fb      	ldrb	r3, [r7, #3]
 800063e:	fa22 f303 	lsr.w	r3, r2, r3
 8000642:	b2db      	uxtb	r3, r3
 8000644:	f003 0301 	and.w	r3, r3, #1
 8000648:	73fb      	strb	r3, [r7, #15]

   return value;
 800064a:	7bfb      	ldrb	r3, [r7, #15]
}
 800064c:	4618      	mov	r0, r3
 800064e:	3714      	adds	r7, #20
 8000650:	46bd      	mov	sp, r7
 8000652:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000656:	4770      	bx	lr

08000658 <GPIO_WriteToOutputPin>:
 * @return            -
 *
 * @Note              -
 */
void GPIO_WriteToOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber, uint8_t Value)
{
 8000658:	b480      	push	{r7}
 800065a:	b083      	sub	sp, #12
 800065c:	af00      	add	r7, sp, #0
 800065e:	6078      	str	r0, [r7, #4]
 8000660:	460b      	mov	r3, r1
 8000662:	70fb      	strb	r3, [r7, #3]
 8000664:	4613      	mov	r3, r2
 8000666:	70bb      	strb	r3, [r7, #2]

	if(Value == GPIO_PIN_SET)
 8000668:	78bb      	ldrb	r3, [r7, #2]
 800066a:	2b01      	cmp	r3, #1
 800066c:	d109      	bne.n	8000682 <GPIO_WriteToOutputPin+0x2a>
	{
		//write 1 to the output data register at the bit field corresponding to the pin number
		pGPIOx->ODR |= ( 1 << PinNumber);
 800066e:	687b      	ldr	r3, [r7, #4]
 8000670:	695b      	ldr	r3, [r3, #20]
 8000672:	78fa      	ldrb	r2, [r7, #3]
 8000674:	2101      	movs	r1, #1
 8000676:	fa01 f202 	lsl.w	r2, r1, r2
 800067a:	431a      	orrs	r2, r3
 800067c:	687b      	ldr	r3, [r7, #4]
 800067e:	615a      	str	r2, [r3, #20]
	}else
	{
		//write 0
		pGPIOx->ODR &= ~( 1 << PinNumber);
	}
}
 8000680:	e009      	b.n	8000696 <GPIO_WriteToOutputPin+0x3e>
		pGPIOx->ODR &= ~( 1 << PinNumber);
 8000682:	687b      	ldr	r3, [r7, #4]
 8000684:	695b      	ldr	r3, [r3, #20]
 8000686:	78fa      	ldrb	r2, [r7, #3]
 8000688:	2101      	movs	r1, #1
 800068a:	fa01 f202 	lsl.w	r2, r1, r2
 800068e:	43d2      	mvns	r2, r2
 8000690:	401a      	ands	r2, r3
 8000692:	687b      	ldr	r3, [r7, #4]
 8000694:	615a      	str	r2, [r3, #20]
}
 8000696:	bf00      	nop
 8000698:	370c      	adds	r7, #12
 800069a:	46bd      	mov	sp, r7
 800069c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80006a0:	4770      	bx	lr

080006a2 <GPIO_ToggleOutputPin>:
 * @return            -
 *
 * @Note              -
 */
void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 80006a2:	b480      	push	{r7}
 80006a4:	b083      	sub	sp, #12
 80006a6:	af00      	add	r7, sp, #0
 80006a8:	6078      	str	r0, [r7, #4]
 80006aa:	460b      	mov	r3, r1
 80006ac:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR  ^= ( 1 << PinNumber);
 80006ae:	687b      	ldr	r3, [r7, #4]
 80006b0:	695b      	ldr	r3, [r3, #20]
 80006b2:	78fa      	ldrb	r2, [r7, #3]
 80006b4:	2101      	movs	r1, #1
 80006b6:	fa01 f202 	lsl.w	r2, r1, r2
 80006ba:	405a      	eors	r2, r3
 80006bc:	687b      	ldr	r3, [r7, #4]
 80006be:	615a      	str	r2, [r3, #20]
}
 80006c0:	bf00      	nop
 80006c2:	370c      	adds	r7, #12
 80006c4:	46bd      	mov	sp, r7
 80006c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80006ca:	4770      	bx	lr

080006cc <main>:
uint32_t _4_HZ =25000000;
uint32_t _8_HZ =7500000;


int main(void)
{
 80006cc:	b580      	push	{r7, lr}
 80006ce:	b090      	sub	sp, #64	; 0x40
 80006d0:	af00      	add	r7, sp, #0
	GPIO_Handle_t GpioLed, GpioLed1, GpioLed2, GpioLed3, GpioBtn;

	GpioLed.pGPIOx = GPIOD;
 80006d2:	4b77      	ldr	r3, [pc, #476]	; (80008b0 <main+0x1e4>)
 80006d4:	637b      	str	r3, [r7, #52]	; 0x34
	GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_12;
 80006d6:	230c      	movs	r3, #12
 80006d8:	f887 3038 	strb.w	r3, [r7, #56]	; 0x38
	GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 80006dc:	2301      	movs	r3, #1
 80006de:	f887 3039 	strb.w	r3, [r7, #57]	; 0x39
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 80006e2:	2302      	movs	r3, #2
 80006e4:	f887 303a 	strb.w	r3, [r7, #58]	; 0x3a
	GpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 80006e8:	2300      	movs	r3, #0
 80006ea:	f887 303c 	strb.w	r3, [r7, #60]	; 0x3c
	GPIO_PeriClockControl(GPIOD, ENABLE);
 80006ee:	2101      	movs	r1, #1
 80006f0:	486f      	ldr	r0, [pc, #444]	; (80008b0 <main+0x1e4>)
 80006f2:	f7ff fd79 	bl	80001e8 <GPIO_PeriClockControl>
	GPIO_Init(&GpioLed);
 80006f6:	f107 0334 	add.w	r3, r7, #52	; 0x34
 80006fa:	4618      	mov	r0, r3
 80006fc:	f7ff fdfa 	bl	80002f4 <GPIO_Init>

	GpioLed1.pGPIOx = GPIOD;
 8000700:	4b6b      	ldr	r3, [pc, #428]	; (80008b0 <main+0x1e4>)
 8000702:	62bb      	str	r3, [r7, #40]	; 0x28
	GpioLed1.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_13;
 8000704:	230d      	movs	r3, #13
 8000706:	f887 302c 	strb.w	r3, [r7, #44]	; 0x2c
	GpioLed1.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 800070a:	2301      	movs	r3, #1
 800070c:	f887 302d 	strb.w	r3, [r7, #45]	; 0x2d
	GpioLed1.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000710:	2302      	movs	r3, #2
 8000712:	f887 302e 	strb.w	r3, [r7, #46]	; 0x2e
	GpioLed1.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 8000716:	2300      	movs	r3, #0
 8000718:	f887 3030 	strb.w	r3, [r7, #48]	; 0x30
	GPIO_PeriClockControl(GPIOD, ENABLE);
 800071c:	2101      	movs	r1, #1
 800071e:	4864      	ldr	r0, [pc, #400]	; (80008b0 <main+0x1e4>)
 8000720:	f7ff fd62 	bl	80001e8 <GPIO_PeriClockControl>
	GPIO_Init(&GpioLed1);
 8000724:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8000728:	4618      	mov	r0, r3
 800072a:	f7ff fde3 	bl	80002f4 <GPIO_Init>

	GpioLed2.pGPIOx = GPIOD;
 800072e:	4b60      	ldr	r3, [pc, #384]	; (80008b0 <main+0x1e4>)
 8000730:	61fb      	str	r3, [r7, #28]
	GpioLed2.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_14;
 8000732:	230e      	movs	r3, #14
 8000734:	f887 3020 	strb.w	r3, [r7, #32]
	GpioLed2.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 8000738:	2301      	movs	r3, #1
 800073a:	f887 3021 	strb.w	r3, [r7, #33]	; 0x21
	GpioLed2.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 800073e:	2302      	movs	r3, #2
 8000740:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
	GpioLed2.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 8000744:	2300      	movs	r3, #0
 8000746:	f887 3024 	strb.w	r3, [r7, #36]	; 0x24
	GPIO_PeriClockControl(GPIOD, ENABLE);
 800074a:	2101      	movs	r1, #1
 800074c:	4858      	ldr	r0, [pc, #352]	; (80008b0 <main+0x1e4>)
 800074e:	f7ff fd4b 	bl	80001e8 <GPIO_PeriClockControl>
	GPIO_Init(&GpioLed2);
 8000752:	f107 031c 	add.w	r3, r7, #28
 8000756:	4618      	mov	r0, r3
 8000758:	f7ff fdcc 	bl	80002f4 <GPIO_Init>

	GpioLed3.pGPIOx = GPIOD;
 800075c:	4b54      	ldr	r3, [pc, #336]	; (80008b0 <main+0x1e4>)
 800075e:	613b      	str	r3, [r7, #16]
	GpioLed3.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_15;
 8000760:	230f      	movs	r3, #15
 8000762:	753b      	strb	r3, [r7, #20]
	GpioLed3.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 8000764:	2301      	movs	r3, #1
 8000766:	757b      	strb	r3, [r7, #21]
	GpioLed3.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000768:	2302      	movs	r3, #2
 800076a:	75bb      	strb	r3, [r7, #22]
	GpioLed3.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 800076c:	2300      	movs	r3, #0
 800076e:	763b      	strb	r3, [r7, #24]
	GPIO_PeriClockControl(GPIOD, ENABLE);
 8000770:	2101      	movs	r1, #1
 8000772:	484f      	ldr	r0, [pc, #316]	; (80008b0 <main+0x1e4>)
 8000774:	f7ff fd38 	bl	80001e8 <GPIO_PeriClockControl>
	GPIO_Init(&GpioLed3);
 8000778:	f107 0310 	add.w	r3, r7, #16
 800077c:	4618      	mov	r0, r3
 800077e:	f7ff fdb9 	bl	80002f4 <GPIO_Init>

	GpioBtn.pGPIOx = GPIOA;
 8000782:	4b4c      	ldr	r3, [pc, #304]	; (80008b4 <main+0x1e8>)
 8000784:	607b      	str	r3, [r7, #4]
	GpioBtn.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_0;
 8000786:	2300      	movs	r3, #0
 8000788:	723b      	strb	r3, [r7, #8]
	GpioBtn.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IN;
 800078a:	2300      	movs	r3, #0
 800078c:	727b      	strb	r3, [r7, #9]
	GpioBtn.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 800078e:	2302      	movs	r3, #2
 8000790:	72bb      	strb	r3, [r7, #10]
	GpioBtn.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 8000792:	2300      	movs	r3, #0
 8000794:	72fb      	strb	r3, [r7, #11]
	GPIO_PeriClockControl(GPIOA, ENABLE);
 8000796:	2101      	movs	r1, #1
 8000798:	4846      	ldr	r0, [pc, #280]	; (80008b4 <main+0x1e8>)
 800079a:	f7ff fd25 	bl	80001e8 <GPIO_PeriClockControl>
	GPIO_Init(&GpioBtn);
 800079e:	1d3b      	adds	r3, r7, #4
 80007a0:	4618      	mov	r0, r3
 80007a2:	f7ff fda7 	bl	80002f4 <GPIO_Init>

	while(1)
	{
		if (GPIO_ReadFromInputPin(GPIOA, GPIO_PIN_NO_0))
 80007a6:	2100      	movs	r1, #0
 80007a8:	4842      	ldr	r0, [pc, #264]	; (80008b4 <main+0x1e8>)
 80007aa:	f7ff ff3f 	bl	800062c <GPIO_ReadFromInputPin>
 80007ae:	4603      	mov	r3, r0
 80007b0:	2b00      	cmp	r3, #0
 80007b2:	d0f8      	beq.n	80007a6 <main+0xda>
		{
			if ((flag_var == 1))
 80007b4:	4b40      	ldr	r3, [pc, #256]	; (80008b8 <main+0x1ec>)
 80007b6:	681b      	ldr	r3, [r3, #0]
 80007b8:	2b01      	cmp	r3, #1
 80007ba:	d10c      	bne.n	80007d6 <main+0x10a>
			{	delay_functon(_1_HZ);
 80007bc:	4b3f      	ldr	r3, [pc, #252]	; (80008bc <main+0x1f0>)
 80007be:	681b      	ldr	r3, [r3, #0]
 80007c0:	4618      	mov	r0, r3
 80007c2:	f000 f87d 	bl	80008c0 <delay_functon>
			delay_functon(_1_HZ); // added
 80007c6:	4b3d      	ldr	r3, [pc, #244]	; (80008bc <main+0x1f0>)
 80007c8:	681b      	ldr	r3, [r3, #0]
 80007ca:	4618      	mov	r0, r3
 80007cc:	f000 f878 	bl	80008c0 <delay_functon>
				igniton_on_btn();
 80007d0:	f000 f88c 	bl	80008ec <igniton_on_btn>
 80007d4:	e7e7      	b.n	80007a6 <main+0xda>

			}
			else if ((flag_var == 2)){
 80007d6:	4b38      	ldr	r3, [pc, #224]	; (80008b8 <main+0x1ec>)
 80007d8:	681b      	ldr	r3, [r3, #0]
 80007da:	2b02      	cmp	r3, #2
 80007dc:	d110      	bne.n	8000800 <main+0x134>
				while(flag_var==2){
 80007de:	e00a      	b.n	80007f6 <main+0x12a>
				if(wiper_on_function()==1){
 80007e0:	f000 f922 	bl	8000a28 <wiper_on_function>
 80007e4:	4603      	mov	r3, r0
 80007e6:	2b01      	cmp	r3, #1
 80007e8:	d105      	bne.n	80007f6 <main+0x12a>
					flag_var++;
 80007ea:	4b33      	ldr	r3, [pc, #204]	; (80008b8 <main+0x1ec>)
 80007ec:	681b      	ldr	r3, [r3, #0]
 80007ee:	3301      	adds	r3, #1
 80007f0:	4a31      	ldr	r2, [pc, #196]	; (80008b8 <main+0x1ec>)
 80007f2:	6013      	str	r3, [r2, #0]
					break;}
 80007f4:	e054      	b.n	80008a0 <main+0x1d4>
				while(flag_var==2){
 80007f6:	4b30      	ldr	r3, [pc, #192]	; (80008b8 <main+0x1ec>)
 80007f8:	681b      	ldr	r3, [r3, #0]
 80007fa:	2b02      	cmp	r3, #2
 80007fc:	d0f0      	beq.n	80007e0 <main+0x114>
 80007fe:	e7d2      	b.n	80007a6 <main+0xda>
				}
			}
			else if (flag_var == 3)
 8000800:	4b2d      	ldr	r3, [pc, #180]	; (80008b8 <main+0x1ec>)
 8000802:	681b      	ldr	r3, [r3, #0]
 8000804:	2b03      	cmp	r3, #3
 8000806:	d110      	bne.n	800082a <main+0x15e>
			{
				while(flag_var==3){
 8000808:	e00a      	b.n	8000820 <main+0x154>
					if(ignition_wiper_on()==1){
 800080a:	f000 f8a5 	bl	8000958 <ignition_wiper_on>
 800080e:	4603      	mov	r3, r0
 8000810:	2b01      	cmp	r3, #1
 8000812:	d105      	bne.n	8000820 <main+0x154>
						flag_var++;
 8000814:	4b28      	ldr	r3, [pc, #160]	; (80008b8 <main+0x1ec>)
 8000816:	681b      	ldr	r3, [r3, #0]
 8000818:	3301      	adds	r3, #1
 800081a:	4a27      	ldr	r2, [pc, #156]	; (80008b8 <main+0x1ec>)
 800081c:	6013      	str	r3, [r2, #0]
						break;}
 800081e:	e03f      	b.n	80008a0 <main+0x1d4>
				while(flag_var==3){
 8000820:	4b25      	ldr	r3, [pc, #148]	; (80008b8 <main+0x1ec>)
 8000822:	681b      	ldr	r3, [r3, #0]
 8000824:	2b03      	cmp	r3, #3
 8000826:	d0f0      	beq.n	800080a <main+0x13e>
 8000828:	e7bd      	b.n	80007a6 <main+0xda>
					}
			}
			else if (flag_var == 4)
 800082a:	4b23      	ldr	r3, [pc, #140]	; (80008b8 <main+0x1ec>)
 800082c:	681b      	ldr	r3, [r3, #0]
 800082e:	2b04      	cmp	r3, #4
 8000830:	d112      	bne.n	8000858 <main+0x18c>
			{
				while(flag_var==4){
 8000832:	e00c      	b.n	800084e <main+0x182>
					if(Highspeed_wiper_on()==1){
 8000834:	f000 f992 	bl	8000b5c <Highspeed_wiper_on>
 8000838:	4603      	mov	r3, r0
 800083a:	2b01      	cmp	r3, #1
 800083c:	d105      	bne.n	800084a <main+0x17e>
						flag_var++;
 800083e:	4b1e      	ldr	r3, [pc, #120]	; (80008b8 <main+0x1ec>)
 8000840:	681b      	ldr	r3, [r3, #0]
 8000842:	3301      	adds	r3, #1
 8000844:	4a1c      	ldr	r2, [pc, #112]	; (80008b8 <main+0x1ec>)
 8000846:	6013      	str	r3, [r2, #0]
					    	break;}
 8000848:	e02a      	b.n	80008a0 <main+0x1d4>
			Highspeed_wiper_on();
 800084a:	f000 f987 	bl	8000b5c <Highspeed_wiper_on>
				while(flag_var==4){
 800084e:	4b1a      	ldr	r3, [pc, #104]	; (80008b8 <main+0x1ec>)
 8000850:	681b      	ldr	r3, [r3, #0]
 8000852:	2b04      	cmp	r3, #4
 8000854:	d0ee      	beq.n	8000834 <main+0x168>
 8000856:	e7a6      	b.n	80007a6 <main+0xda>
							}
								}
			else if (flag_var == 5)
 8000858:	4b17      	ldr	r3, [pc, #92]	; (80008b8 <main+0x1ec>)
 800085a:	681b      	ldr	r3, [r3, #0]
 800085c:	2b05      	cmp	r3, #5
 800085e:	d10f      	bne.n	8000880 <main+0x1b4>
			{GPIO_ReadFromInputPin(GPIOA, GPIO_PIN_NO_0);
 8000860:	2100      	movs	r1, #0
 8000862:	4814      	ldr	r0, [pc, #80]	; (80008b4 <main+0x1e8>)
 8000864:	f7ff fee2 	bl	800062c <GPIO_ReadFromInputPin>
			GPIO_ReadFromInputPin(GPIOA, GPIO_PIN_NO_0);
 8000868:	2100      	movs	r1, #0
 800086a:	4812      	ldr	r0, [pc, #72]	; (80008b4 <main+0x1e8>)
 800086c:	f7ff fede 	bl	800062c <GPIO_ReadFromInputPin>
				wiper_off_function();
 8000870:	f000 f942 	bl	8000af8 <wiper_off_function>
				flag_var++;
 8000874:	4b10      	ldr	r3, [pc, #64]	; (80008b8 <main+0x1ec>)
 8000876:	681b      	ldr	r3, [r3, #0]
 8000878:	3301      	adds	r3, #1
 800087a:	4a0f      	ldr	r2, [pc, #60]	; (80008b8 <main+0x1ec>)
 800087c:	6013      	str	r3, [r2, #0]
 800087e:	e792      	b.n	80007a6 <main+0xda>
			}
			else if(flag_var==6) {
 8000880:	4b0d      	ldr	r3, [pc, #52]	; (80008b8 <main+0x1ec>)
 8000882:	681b      	ldr	r3, [r3, #0]
 8000884:	2b06      	cmp	r3, #6
 8000886:	d10c      	bne.n	80008a2 <main+0x1d6>
				delay_functon(_1_HZ);
 8000888:	4b0c      	ldr	r3, [pc, #48]	; (80008bc <main+0x1f0>)
 800088a:	681b      	ldr	r3, [r3, #0]
 800088c:	4618      	mov	r0, r3
 800088e:	f000 f817 	bl	80008c0 <delay_functon>
				delay_functon(_1_HZ);
 8000892:	4b0a      	ldr	r3, [pc, #40]	; (80008bc <main+0x1f0>)
 8000894:	681b      	ldr	r3, [r3, #0]
 8000896:	4618      	mov	r0, r3
 8000898:	f000 f812 	bl	80008c0 <delay_functon>
			igniton_off_btn();
 800089c:	f000 f844 	bl	8000928 <igniton_off_btn>
		if (GPIO_ReadFromInputPin(GPIOA, GPIO_PIN_NO_0))
 80008a0:	e781      	b.n	80007a6 <main+0xda>
			}
			else
				break;
 80008a2:	bf00      	nop
 80008a4:	2300      	movs	r3, #0
		}
	}}
 80008a6:	4618      	mov	r0, r3
 80008a8:	3740      	adds	r7, #64	; 0x40
 80008aa:	46bd      	mov	sp, r7
 80008ac:	bd80      	pop	{r7, pc}
 80008ae:	bf00      	nop
 80008b0:	40020c00 	.word	0x40020c00
 80008b4:	40020000 	.word	0x40020000
 80008b8:	20000000 	.word	0x20000000
 80008bc:	20000004 	.word	0x20000004

080008c0 <delay_functon>:

void delay_functon(uint32_t hertz)
{
 80008c0:	b480      	push	{r7}
 80008c2:	b085      	sub	sp, #20
 80008c4:	af00      	add	r7, sp, #0
 80008c6:	6078      	str	r0, [r7, #4]
	for (uint32_t i_loop = 0; i_loop < hertz; i_loop++);
 80008c8:	2300      	movs	r3, #0
 80008ca:	60fb      	str	r3, [r7, #12]
 80008cc:	e002      	b.n	80008d4 <delay_functon+0x14>
 80008ce:	68fb      	ldr	r3, [r7, #12]
 80008d0:	3301      	adds	r3, #1
 80008d2:	60fb      	str	r3, [r7, #12]
 80008d4:	68fa      	ldr	r2, [r7, #12]
 80008d6:	687b      	ldr	r3, [r7, #4]
 80008d8:	429a      	cmp	r2, r3
 80008da:	d3f8      	bcc.n	80008ce <delay_functon+0xe>
}
 80008dc:	bf00      	nop
 80008de:	bf00      	nop
 80008e0:	3714      	adds	r7, #20
 80008e2:	46bd      	mov	sp, r7
 80008e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80008e8:	4770      	bx	lr
	...

080008ec <igniton_on_btn>:

void igniton_on_btn(void)
{
 80008ec:	b580      	push	{r7, lr}
 80008ee:	af00      	add	r7, sp, #0
	delay_functon(_1_HZ);
 80008f0:	4b0a      	ldr	r3, [pc, #40]	; (800091c <igniton_on_btn+0x30>)
 80008f2:	681b      	ldr	r3, [r3, #0]
 80008f4:	4618      	mov	r0, r3
 80008f6:	f7ff ffe3 	bl	80008c0 <delay_functon>
	delay_functon(_1_HZ);
 80008fa:	4b08      	ldr	r3, [pc, #32]	; (800091c <igniton_on_btn+0x30>)
 80008fc:	681b      	ldr	r3, [r3, #0]
 80008fe:	4618      	mov	r0, r3
 8000900:	f7ff ffde 	bl	80008c0 <delay_functon>
	GPIO_ToggleOutputPin(GPIOD, GPIO_PIN_NO_14);//red on
 8000904:	210e      	movs	r1, #14
 8000906:	4806      	ldr	r0, [pc, #24]	; (8000920 <igniton_on_btn+0x34>)
 8000908:	f7ff fecb 	bl	80006a2 <GPIO_ToggleOutputPin>
	flag_var++;
 800090c:	4b05      	ldr	r3, [pc, #20]	; (8000924 <igniton_on_btn+0x38>)
 800090e:	681b      	ldr	r3, [r3, #0]
 8000910:	3301      	adds	r3, #1
 8000912:	4a04      	ldr	r2, [pc, #16]	; (8000924 <igniton_on_btn+0x38>)
 8000914:	6013      	str	r3, [r2, #0]
}
 8000916:	bf00      	nop
 8000918:	bd80      	pop	{r7, pc}
 800091a:	bf00      	nop
 800091c:	20000004 	.word	0x20000004
 8000920:	40020c00 	.word	0x40020c00
 8000924:	20000000 	.word	0x20000000

08000928 <igniton_off_btn>:

void igniton_off_btn(void)
{
 8000928:	b580      	push	{r7, lr}
 800092a:	af00      	add	r7, sp, #0
	GPIO_ReadFromInputPin(GPIOA, GPIO_PIN_NO_0);
 800092c:	2100      	movs	r1, #0
 800092e:	4807      	ldr	r0, [pc, #28]	; (800094c <igniton_off_btn+0x24>)
 8000930:	f7ff fe7c 	bl	800062c <GPIO_ReadFromInputPin>
	GPIO_WriteToOutputPin(GPIOD, GPIO_PIN_NO_14, 0);
 8000934:	2200      	movs	r2, #0
 8000936:	210e      	movs	r1, #14
 8000938:	4805      	ldr	r0, [pc, #20]	; (8000950 <igniton_off_btn+0x28>)
 800093a:	f7ff fe8d 	bl	8000658 <GPIO_WriteToOutputPin>
	flag_var++;
 800093e:	4b05      	ldr	r3, [pc, #20]	; (8000954 <igniton_off_btn+0x2c>)
 8000940:	681b      	ldr	r3, [r3, #0]
 8000942:	3301      	adds	r3, #1
 8000944:	4a03      	ldr	r2, [pc, #12]	; (8000954 <igniton_off_btn+0x2c>)
 8000946:	6013      	str	r3, [r2, #0]
}
 8000948:	bf00      	nop
 800094a:	bd80      	pop	{r7, pc}
 800094c:	40020000 	.word	0x40020000
 8000950:	40020c00 	.word	0x40020c00
 8000954:	20000000 	.word	0x20000000

08000958 <ignition_wiper_on>:
int ignition_wiper_on(void)
{
 8000958:	b580      	push	{r7, lr}
 800095a:	af00      	add	r7, sp, #0
	GPIO_ToggleOutputPin(GPIOD, GPIO_PIN_NO_15);
 800095c:	210f      	movs	r1, #15
 800095e:	482f      	ldr	r0, [pc, #188]	; (8000a1c <ignition_wiper_on+0xc4>)
 8000960:	f7ff fe9f 	bl	80006a2 <GPIO_ToggleOutputPin>
	delay_functon(_4_HZ);
 8000964:	4b2e      	ldr	r3, [pc, #184]	; (8000a20 <ignition_wiper_on+0xc8>)
 8000966:	681b      	ldr	r3, [r3, #0]
 8000968:	4618      	mov	r0, r3
 800096a:	f7ff ffa9 	bl	80008c0 <delay_functon>
	GPIO_WriteToOutputPin(GPIOD, GPIO_PIN_NO_15,0 );
 800096e:	2200      	movs	r2, #0
 8000970:	210f      	movs	r1, #15
 8000972:	482a      	ldr	r0, [pc, #168]	; (8000a1c <ignition_wiper_on+0xc4>)
 8000974:	f7ff fe70 	bl	8000658 <GPIO_WriteToOutputPin>

	GPIO_ToggleOutputPin(GPIOD, GPIO_PIN_NO_12);
 8000978:	210c      	movs	r1, #12
 800097a:	4828      	ldr	r0, [pc, #160]	; (8000a1c <ignition_wiper_on+0xc4>)
 800097c:	f7ff fe91 	bl	80006a2 <GPIO_ToggleOutputPin>
	delay_functon(_4_HZ);
 8000980:	4b27      	ldr	r3, [pc, #156]	; (8000a20 <ignition_wiper_on+0xc8>)
 8000982:	681b      	ldr	r3, [r3, #0]
 8000984:	4618      	mov	r0, r3
 8000986:	f7ff ff9b 	bl	80008c0 <delay_functon>
	GPIO_WriteToOutputPin(GPIOD, GPIO_PIN_NO_12,0 );
 800098a:	2200      	movs	r2, #0
 800098c:	210c      	movs	r1, #12
 800098e:	4823      	ldr	r0, [pc, #140]	; (8000a1c <ignition_wiper_on+0xc4>)
 8000990:	f7ff fe62 	bl	8000658 <GPIO_WriteToOutputPin>

	GPIO_ToggleOutputPin(GPIOD, GPIO_PIN_NO_13);
 8000994:	210d      	movs	r1, #13
 8000996:	4821      	ldr	r0, [pc, #132]	; (8000a1c <ignition_wiper_on+0xc4>)
 8000998:	f7ff fe83 	bl	80006a2 <GPIO_ToggleOutputPin>
	delay_functon(_4_HZ);
 800099c:	4b20      	ldr	r3, [pc, #128]	; (8000a20 <ignition_wiper_on+0xc8>)
 800099e:	681b      	ldr	r3, [r3, #0]
 80009a0:	4618      	mov	r0, r3
 80009a2:	f7ff ff8d 	bl	80008c0 <delay_functon>
	GPIO_WriteToOutputPin(GPIOD, GPIO_PIN_NO_13,0 );
 80009a6:	2200      	movs	r2, #0
 80009a8:	210d      	movs	r1, #13
 80009aa:	481c      	ldr	r0, [pc, #112]	; (8000a1c <ignition_wiper_on+0xc4>)
 80009ac:	f7ff fe54 	bl	8000658 <GPIO_WriteToOutputPin>

	GPIO_ToggleOutputPin(GPIOD, GPIO_PIN_NO_13);
 80009b0:	210d      	movs	r1, #13
 80009b2:	481a      	ldr	r0, [pc, #104]	; (8000a1c <ignition_wiper_on+0xc4>)
 80009b4:	f7ff fe75 	bl	80006a2 <GPIO_ToggleOutputPin>
	delay_functon(_4_HZ);
 80009b8:	4b19      	ldr	r3, [pc, #100]	; (8000a20 <ignition_wiper_on+0xc8>)
 80009ba:	681b      	ldr	r3, [r3, #0]
 80009bc:	4618      	mov	r0, r3
 80009be:	f7ff ff7f 	bl	80008c0 <delay_functon>
	GPIO_WriteToOutputPin(GPIOD, GPIO_PIN_NO_13,0 );
 80009c2:	2200      	movs	r2, #0
 80009c4:	210d      	movs	r1, #13
 80009c6:	4815      	ldr	r0, [pc, #84]	; (8000a1c <ignition_wiper_on+0xc4>)
 80009c8:	f7ff fe46 	bl	8000658 <GPIO_WriteToOutputPin>

	GPIO_ToggleOutputPin(GPIOD, GPIO_PIN_NO_12);
 80009cc:	210c      	movs	r1, #12
 80009ce:	4813      	ldr	r0, [pc, #76]	; (8000a1c <ignition_wiper_on+0xc4>)
 80009d0:	f7ff fe67 	bl	80006a2 <GPIO_ToggleOutputPin>
	delay_functon(_4_HZ);
 80009d4:	4b12      	ldr	r3, [pc, #72]	; (8000a20 <ignition_wiper_on+0xc8>)
 80009d6:	681b      	ldr	r3, [r3, #0]
 80009d8:	4618      	mov	r0, r3
 80009da:	f7ff ff71 	bl	80008c0 <delay_functon>
	GPIO_WriteToOutputPin(GPIOD, GPIO_PIN_NO_12,0 );
 80009de:	2200      	movs	r2, #0
 80009e0:	210c      	movs	r1, #12
 80009e2:	480e      	ldr	r0, [pc, #56]	; (8000a1c <ignition_wiper_on+0xc4>)
 80009e4:	f7ff fe38 	bl	8000658 <GPIO_WriteToOutputPin>

	GPIO_ToggleOutputPin(GPIOD, GPIO_PIN_NO_15);
 80009e8:	210f      	movs	r1, #15
 80009ea:	480c      	ldr	r0, [pc, #48]	; (8000a1c <ignition_wiper_on+0xc4>)
 80009ec:	f7ff fe59 	bl	80006a2 <GPIO_ToggleOutputPin>
	delay_functon(_4_HZ);
 80009f0:	4b0b      	ldr	r3, [pc, #44]	; (8000a20 <ignition_wiper_on+0xc8>)
 80009f2:	681b      	ldr	r3, [r3, #0]
 80009f4:	4618      	mov	r0, r3
 80009f6:	f7ff ff63 	bl	80008c0 <delay_functon>
	GPIO_WriteToOutputPin(GPIOD, GPIO_PIN_NO_15,0 );
 80009fa:	2200      	movs	r2, #0
 80009fc:	210f      	movs	r1, #15
 80009fe:	4807      	ldr	r0, [pc, #28]	; (8000a1c <ignition_wiper_on+0xc4>)
 8000a00:	f7ff fe2a 	bl	8000658 <GPIO_WriteToOutputPin>

	if (GPIO_ReadFromInputPin(GPIOA, GPIO_PIN_NO_0))
 8000a04:	2100      	movs	r1, #0
 8000a06:	4807      	ldr	r0, [pc, #28]	; (8000a24 <ignition_wiper_on+0xcc>)
 8000a08:	f7ff fe10 	bl	800062c <GPIO_ReadFromInputPin>
 8000a0c:	4603      	mov	r3, r0
 8000a0e:	2b00      	cmp	r3, #0
 8000a10:	d001      	beq.n	8000a16 <ignition_wiper_on+0xbe>
		return 1;
 8000a12:	2301      	movs	r3, #1
 8000a14:	e000      	b.n	8000a18 <ignition_wiper_on+0xc0>
	else
		return 0;
 8000a16:	2300      	movs	r3, #0
}
 8000a18:	4618      	mov	r0, r3
 8000a1a:	bd80      	pop	{r7, pc}
 8000a1c:	40020c00 	.word	0x40020c00
 8000a20:	20000008 	.word	0x20000008
 8000a24:	40020000 	.word	0x40020000

08000a28 <wiper_on_function>:
int wiper_on_function(void)
{
 8000a28:	b580      	push	{r7, lr}
 8000a2a:	af00      	add	r7, sp, #0
	GPIO_ToggleOutputPin(GPIOD, GPIO_PIN_NO_15);
 8000a2c:	210f      	movs	r1, #15
 8000a2e:	482f      	ldr	r0, [pc, #188]	; (8000aec <wiper_on_function+0xc4>)
 8000a30:	f7ff fe37 	bl	80006a2 <GPIO_ToggleOutputPin>
	delay_functon(_1_HZ);
 8000a34:	4b2e      	ldr	r3, [pc, #184]	; (8000af0 <wiper_on_function+0xc8>)
 8000a36:	681b      	ldr	r3, [r3, #0]
 8000a38:	4618      	mov	r0, r3
 8000a3a:	f7ff ff41 	bl	80008c0 <delay_functon>
	GPIO_WriteToOutputPin(GPIOD, GPIO_PIN_NO_15,0 );
 8000a3e:	2200      	movs	r2, #0
 8000a40:	210f      	movs	r1, #15
 8000a42:	482a      	ldr	r0, [pc, #168]	; (8000aec <wiper_on_function+0xc4>)
 8000a44:	f7ff fe08 	bl	8000658 <GPIO_WriteToOutputPin>

	GPIO_ToggleOutputPin(GPIOD, GPIO_PIN_NO_12);
 8000a48:	210c      	movs	r1, #12
 8000a4a:	4828      	ldr	r0, [pc, #160]	; (8000aec <wiper_on_function+0xc4>)
 8000a4c:	f7ff fe29 	bl	80006a2 <GPIO_ToggleOutputPin>
	delay_functon(_1_HZ);
 8000a50:	4b27      	ldr	r3, [pc, #156]	; (8000af0 <wiper_on_function+0xc8>)
 8000a52:	681b      	ldr	r3, [r3, #0]
 8000a54:	4618      	mov	r0, r3
 8000a56:	f7ff ff33 	bl	80008c0 <delay_functon>
	GPIO_WriteToOutputPin(GPIOD, GPIO_PIN_NO_12,0 );
 8000a5a:	2200      	movs	r2, #0
 8000a5c:	210c      	movs	r1, #12
 8000a5e:	4823      	ldr	r0, [pc, #140]	; (8000aec <wiper_on_function+0xc4>)
 8000a60:	f7ff fdfa 	bl	8000658 <GPIO_WriteToOutputPin>

	GPIO_ToggleOutputPin(GPIOD, GPIO_PIN_NO_13);
 8000a64:	210d      	movs	r1, #13
 8000a66:	4821      	ldr	r0, [pc, #132]	; (8000aec <wiper_on_function+0xc4>)
 8000a68:	f7ff fe1b 	bl	80006a2 <GPIO_ToggleOutputPin>
	delay_functon(_1_HZ);
 8000a6c:	4b20      	ldr	r3, [pc, #128]	; (8000af0 <wiper_on_function+0xc8>)
 8000a6e:	681b      	ldr	r3, [r3, #0]
 8000a70:	4618      	mov	r0, r3
 8000a72:	f7ff ff25 	bl	80008c0 <delay_functon>
	GPIO_WriteToOutputPin(GPIOD, GPIO_PIN_NO_13,0 );
 8000a76:	2200      	movs	r2, #0
 8000a78:	210d      	movs	r1, #13
 8000a7a:	481c      	ldr	r0, [pc, #112]	; (8000aec <wiper_on_function+0xc4>)
 8000a7c:	f7ff fdec 	bl	8000658 <GPIO_WriteToOutputPin>

	GPIO_ToggleOutputPin(GPIOD, GPIO_PIN_NO_13);
 8000a80:	210d      	movs	r1, #13
 8000a82:	481a      	ldr	r0, [pc, #104]	; (8000aec <wiper_on_function+0xc4>)
 8000a84:	f7ff fe0d 	bl	80006a2 <GPIO_ToggleOutputPin>
	delay_functon(_1_HZ);
 8000a88:	4b19      	ldr	r3, [pc, #100]	; (8000af0 <wiper_on_function+0xc8>)
 8000a8a:	681b      	ldr	r3, [r3, #0]
 8000a8c:	4618      	mov	r0, r3
 8000a8e:	f7ff ff17 	bl	80008c0 <delay_functon>
	GPIO_WriteToOutputPin(GPIOD, GPIO_PIN_NO_13,0 );
 8000a92:	2200      	movs	r2, #0
 8000a94:	210d      	movs	r1, #13
 8000a96:	4815      	ldr	r0, [pc, #84]	; (8000aec <wiper_on_function+0xc4>)
 8000a98:	f7ff fdde 	bl	8000658 <GPIO_WriteToOutputPin>

	GPIO_ToggleOutputPin(GPIOD, GPIO_PIN_NO_12);
 8000a9c:	210c      	movs	r1, #12
 8000a9e:	4813      	ldr	r0, [pc, #76]	; (8000aec <wiper_on_function+0xc4>)
 8000aa0:	f7ff fdff 	bl	80006a2 <GPIO_ToggleOutputPin>
	delay_functon(_1_HZ);
 8000aa4:	4b12      	ldr	r3, [pc, #72]	; (8000af0 <wiper_on_function+0xc8>)
 8000aa6:	681b      	ldr	r3, [r3, #0]
 8000aa8:	4618      	mov	r0, r3
 8000aaa:	f7ff ff09 	bl	80008c0 <delay_functon>
	GPIO_WriteToOutputPin(GPIOD, GPIO_PIN_NO_12,0 );
 8000aae:	2200      	movs	r2, #0
 8000ab0:	210c      	movs	r1, #12
 8000ab2:	480e      	ldr	r0, [pc, #56]	; (8000aec <wiper_on_function+0xc4>)
 8000ab4:	f7ff fdd0 	bl	8000658 <GPIO_WriteToOutputPin>

	GPIO_ToggleOutputPin(GPIOD, GPIO_PIN_NO_15);
 8000ab8:	210f      	movs	r1, #15
 8000aba:	480c      	ldr	r0, [pc, #48]	; (8000aec <wiper_on_function+0xc4>)
 8000abc:	f7ff fdf1 	bl	80006a2 <GPIO_ToggleOutputPin>
	delay_functon(_1_HZ);
 8000ac0:	4b0b      	ldr	r3, [pc, #44]	; (8000af0 <wiper_on_function+0xc8>)
 8000ac2:	681b      	ldr	r3, [r3, #0]
 8000ac4:	4618      	mov	r0, r3
 8000ac6:	f7ff fefb 	bl	80008c0 <delay_functon>
	GPIO_WriteToOutputPin(GPIOD, GPIO_PIN_NO_15,0 );
 8000aca:	2200      	movs	r2, #0
 8000acc:	210f      	movs	r1, #15
 8000ace:	4807      	ldr	r0, [pc, #28]	; (8000aec <wiper_on_function+0xc4>)
 8000ad0:	f7ff fdc2 	bl	8000658 <GPIO_WriteToOutputPin>

//	delay();

	if (GPIO_ReadFromInputPin(GPIOA, GPIO_PIN_NO_0))
 8000ad4:	2100      	movs	r1, #0
 8000ad6:	4807      	ldr	r0, [pc, #28]	; (8000af4 <wiper_on_function+0xcc>)
 8000ad8:	f7ff fda8 	bl	800062c <GPIO_ReadFromInputPin>
 8000adc:	4603      	mov	r3, r0
 8000ade:	2b00      	cmp	r3, #0
 8000ae0:	d001      	beq.n	8000ae6 <wiper_on_function+0xbe>
		return 1;
 8000ae2:	2301      	movs	r3, #1
 8000ae4:	e000      	b.n	8000ae8 <wiper_on_function+0xc0>
	else
		return 0;
 8000ae6:	2300      	movs	r3, #0
}
 8000ae8:	4618      	mov	r0, r3
 8000aea:	bd80      	pop	{r7, pc}
 8000aec:	40020c00 	.word	0x40020c00
 8000af0:	20000004 	.word	0x20000004
 8000af4:	40020000 	.word	0x40020000

08000af8 <wiper_off_function>:

void wiper_off_function(void)
{
 8000af8:	b580      	push	{r7, lr}
 8000afa:	af00      	add	r7, sp, #0

	GPIO_ToggleOutputPin(GPIOD, GPIO_PIN_NO_13);
 8000afc:	210d      	movs	r1, #13
 8000afe:	4815      	ldr	r0, [pc, #84]	; (8000b54 <wiper_off_function+0x5c>)
 8000b00:	f7ff fdcf 	bl	80006a2 <GPIO_ToggleOutputPin>
	delay_functon(_1_HZ);
 8000b04:	4b14      	ldr	r3, [pc, #80]	; (8000b58 <wiper_off_function+0x60>)
 8000b06:	681b      	ldr	r3, [r3, #0]
 8000b08:	4618      	mov	r0, r3
 8000b0a:	f7ff fed9 	bl	80008c0 <delay_functon>
	GPIO_WriteToOutputPin(GPIOD, GPIO_PIN_NO_13, 0);
 8000b0e:	2200      	movs	r2, #0
 8000b10:	210d      	movs	r1, #13
 8000b12:	4810      	ldr	r0, [pc, #64]	; (8000b54 <wiper_off_function+0x5c>)
 8000b14:	f7ff fda0 	bl	8000658 <GPIO_WriteToOutputPin>

	GPIO_ToggleOutputPin(GPIOD, GPIO_PIN_NO_12);
 8000b18:	210c      	movs	r1, #12
 8000b1a:	480e      	ldr	r0, [pc, #56]	; (8000b54 <wiper_off_function+0x5c>)
 8000b1c:	f7ff fdc1 	bl	80006a2 <GPIO_ToggleOutputPin>
	delay_functon(_1_HZ);
 8000b20:	4b0d      	ldr	r3, [pc, #52]	; (8000b58 <wiper_off_function+0x60>)
 8000b22:	681b      	ldr	r3, [r3, #0]
 8000b24:	4618      	mov	r0, r3
 8000b26:	f7ff fecb 	bl	80008c0 <delay_functon>
	GPIO_WriteToOutputPin(GPIOD, GPIO_PIN_NO_12, 0);
 8000b2a:	2200      	movs	r2, #0
 8000b2c:	210c      	movs	r1, #12
 8000b2e:	4809      	ldr	r0, [pc, #36]	; (8000b54 <wiper_off_function+0x5c>)
 8000b30:	f7ff fd92 	bl	8000658 <GPIO_WriteToOutputPin>

	GPIO_ToggleOutputPin(GPIOD, GPIO_PIN_NO_15);
 8000b34:	210f      	movs	r1, #15
 8000b36:	4807      	ldr	r0, [pc, #28]	; (8000b54 <wiper_off_function+0x5c>)
 8000b38:	f7ff fdb3 	bl	80006a2 <GPIO_ToggleOutputPin>
	delay_functon(_1_HZ);
 8000b3c:	4b06      	ldr	r3, [pc, #24]	; (8000b58 <wiper_off_function+0x60>)
 8000b3e:	681b      	ldr	r3, [r3, #0]
 8000b40:	4618      	mov	r0, r3
 8000b42:	f7ff febd 	bl	80008c0 <delay_functon>
	GPIO_WriteToOutputPin(GPIOD, GPIO_PIN_NO_15,0 );
 8000b46:	2200      	movs	r2, #0
 8000b48:	210f      	movs	r1, #15
 8000b4a:	4802      	ldr	r0, [pc, #8]	; (8000b54 <wiper_off_function+0x5c>)
 8000b4c:	f7ff fd84 	bl	8000658 <GPIO_WriteToOutputPin>


}
 8000b50:	bf00      	nop
 8000b52:	bd80      	pop	{r7, pc}
 8000b54:	40020c00 	.word	0x40020c00
 8000b58:	20000004 	.word	0x20000004

08000b5c <Highspeed_wiper_on>:
int Highspeed_wiper_on(void)
{
 8000b5c:	b580      	push	{r7, lr}
 8000b5e:	af00      	add	r7, sp, #0
	GPIO_ToggleOutputPin(GPIOD, GPIO_PIN_NO_15);//blue
 8000b60:	210f      	movs	r1, #15
 8000b62:	482f      	ldr	r0, [pc, #188]	; (8000c20 <Highspeed_wiper_on+0xc4>)
 8000b64:	f7ff fd9d 	bl	80006a2 <GPIO_ToggleOutputPin>
	delay_functon(_8_HZ);
 8000b68:	4b2e      	ldr	r3, [pc, #184]	; (8000c24 <Highspeed_wiper_on+0xc8>)
 8000b6a:	681b      	ldr	r3, [r3, #0]
 8000b6c:	4618      	mov	r0, r3
 8000b6e:	f7ff fea7 	bl	80008c0 <delay_functon>
	GPIO_WriteToOutputPin(GPIOD, GPIO_PIN_NO_15,0 );
 8000b72:	2200      	movs	r2, #0
 8000b74:	210f      	movs	r1, #15
 8000b76:	482a      	ldr	r0, [pc, #168]	; (8000c20 <Highspeed_wiper_on+0xc4>)
 8000b78:	f7ff fd6e 	bl	8000658 <GPIO_WriteToOutputPin>

	GPIO_ToggleOutputPin(GPIOD, GPIO_PIN_NO_12);//green
 8000b7c:	210c      	movs	r1, #12
 8000b7e:	4828      	ldr	r0, [pc, #160]	; (8000c20 <Highspeed_wiper_on+0xc4>)
 8000b80:	f7ff fd8f 	bl	80006a2 <GPIO_ToggleOutputPin>
	delay_functon(_8_HZ);
 8000b84:	4b27      	ldr	r3, [pc, #156]	; (8000c24 <Highspeed_wiper_on+0xc8>)
 8000b86:	681b      	ldr	r3, [r3, #0]
 8000b88:	4618      	mov	r0, r3
 8000b8a:	f7ff fe99 	bl	80008c0 <delay_functon>
	GPIO_WriteToOutputPin(GPIOD, GPIO_PIN_NO_12,0 );
 8000b8e:	2200      	movs	r2, #0
 8000b90:	210c      	movs	r1, #12
 8000b92:	4823      	ldr	r0, [pc, #140]	; (8000c20 <Highspeed_wiper_on+0xc4>)
 8000b94:	f7ff fd60 	bl	8000658 <GPIO_WriteToOutputPin>

	GPIO_ToggleOutputPin(GPIOD, GPIO_PIN_NO_13);//orange
 8000b98:	210d      	movs	r1, #13
 8000b9a:	4821      	ldr	r0, [pc, #132]	; (8000c20 <Highspeed_wiper_on+0xc4>)
 8000b9c:	f7ff fd81 	bl	80006a2 <GPIO_ToggleOutputPin>
	delay_functon(_8_HZ);
 8000ba0:	4b20      	ldr	r3, [pc, #128]	; (8000c24 <Highspeed_wiper_on+0xc8>)
 8000ba2:	681b      	ldr	r3, [r3, #0]
 8000ba4:	4618      	mov	r0, r3
 8000ba6:	f7ff fe8b 	bl	80008c0 <delay_functon>
	GPIO_WriteToOutputPin(GPIOD, GPIO_PIN_NO_13,0 );
 8000baa:	2200      	movs	r2, #0
 8000bac:	210d      	movs	r1, #13
 8000bae:	481c      	ldr	r0, [pc, #112]	; (8000c20 <Highspeed_wiper_on+0xc4>)
 8000bb0:	f7ff fd52 	bl	8000658 <GPIO_WriteToOutputPin>

	GPIO_ToggleOutputPin(GPIOD, GPIO_PIN_NO_13);
 8000bb4:	210d      	movs	r1, #13
 8000bb6:	481a      	ldr	r0, [pc, #104]	; (8000c20 <Highspeed_wiper_on+0xc4>)
 8000bb8:	f7ff fd73 	bl	80006a2 <GPIO_ToggleOutputPin>
	delay_functon(_8_HZ);
 8000bbc:	4b19      	ldr	r3, [pc, #100]	; (8000c24 <Highspeed_wiper_on+0xc8>)
 8000bbe:	681b      	ldr	r3, [r3, #0]
 8000bc0:	4618      	mov	r0, r3
 8000bc2:	f7ff fe7d 	bl	80008c0 <delay_functon>
	GPIO_WriteToOutputPin(GPIOD, GPIO_PIN_NO_13,0 );
 8000bc6:	2200      	movs	r2, #0
 8000bc8:	210d      	movs	r1, #13
 8000bca:	4815      	ldr	r0, [pc, #84]	; (8000c20 <Highspeed_wiper_on+0xc4>)
 8000bcc:	f7ff fd44 	bl	8000658 <GPIO_WriteToOutputPin>

	GPIO_ToggleOutputPin(GPIOD, GPIO_PIN_NO_12);//green
 8000bd0:	210c      	movs	r1, #12
 8000bd2:	4813      	ldr	r0, [pc, #76]	; (8000c20 <Highspeed_wiper_on+0xc4>)
 8000bd4:	f7ff fd65 	bl	80006a2 <GPIO_ToggleOutputPin>
	delay_functon(_8_HZ);
 8000bd8:	4b12      	ldr	r3, [pc, #72]	; (8000c24 <Highspeed_wiper_on+0xc8>)
 8000bda:	681b      	ldr	r3, [r3, #0]
 8000bdc:	4618      	mov	r0, r3
 8000bde:	f7ff fe6f 	bl	80008c0 <delay_functon>
	GPIO_WriteToOutputPin(GPIOD, GPIO_PIN_NO_12,0 );
 8000be2:	2200      	movs	r2, #0
 8000be4:	210c      	movs	r1, #12
 8000be6:	480e      	ldr	r0, [pc, #56]	; (8000c20 <Highspeed_wiper_on+0xc4>)
 8000be8:	f7ff fd36 	bl	8000658 <GPIO_WriteToOutputPin>

	GPIO_ToggleOutputPin(GPIOD, GPIO_PIN_NO_15);//blue
 8000bec:	210f      	movs	r1, #15
 8000bee:	480c      	ldr	r0, [pc, #48]	; (8000c20 <Highspeed_wiper_on+0xc4>)
 8000bf0:	f7ff fd57 	bl	80006a2 <GPIO_ToggleOutputPin>
	delay_functon(_8_HZ);
 8000bf4:	4b0b      	ldr	r3, [pc, #44]	; (8000c24 <Highspeed_wiper_on+0xc8>)
 8000bf6:	681b      	ldr	r3, [r3, #0]
 8000bf8:	4618      	mov	r0, r3
 8000bfa:	f7ff fe61 	bl	80008c0 <delay_functon>
	GPIO_WriteToOutputPin(GPIOD, GPIO_PIN_NO_15,0 );
 8000bfe:	2200      	movs	r2, #0
 8000c00:	210f      	movs	r1, #15
 8000c02:	4807      	ldr	r0, [pc, #28]	; (8000c20 <Highspeed_wiper_on+0xc4>)
 8000c04:	f7ff fd28 	bl	8000658 <GPIO_WriteToOutputPin>


	 if(GPIO_ReadFromInputPin(GPIOA, GPIO_PIN_NO_0))
 8000c08:	2100      	movs	r1, #0
 8000c0a:	4807      	ldr	r0, [pc, #28]	; (8000c28 <Highspeed_wiper_on+0xcc>)
 8000c0c:	f7ff fd0e 	bl	800062c <GPIO_ReadFromInputPin>
 8000c10:	4603      	mov	r3, r0
 8000c12:	2b00      	cmp	r3, #0
 8000c14:	d001      	beq.n	8000c1a <Highspeed_wiper_on+0xbe>
		return 1;
 8000c16:	2301      	movs	r3, #1
 8000c18:	e000      	b.n	8000c1c <Highspeed_wiper_on+0xc0>
	else
		return 0;
 8000c1a:	2300      	movs	r3, #0
}
 8000c1c:	4618      	mov	r0, r3
 8000c1e:	bd80      	pop	{r7, pc}
 8000c20:	40020c00 	.word	0x40020c00
 8000c24:	2000000c 	.word	0x2000000c
 8000c28:	40020000 	.word	0x40020000

08000c2c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000c2c:	480d      	ldr	r0, [pc, #52]	; (8000c64 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000c2e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000c30:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000c34:	480c      	ldr	r0, [pc, #48]	; (8000c68 <LoopForever+0x6>)
  ldr r1, =_edata
 8000c36:	490d      	ldr	r1, [pc, #52]	; (8000c6c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000c38:	4a0d      	ldr	r2, [pc, #52]	; (8000c70 <LoopForever+0xe>)
  movs r3, #0
 8000c3a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000c3c:	e002      	b.n	8000c44 <LoopCopyDataInit>

08000c3e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000c3e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000c40:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000c42:	3304      	adds	r3, #4

08000c44 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000c44:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000c46:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000c48:	d3f9      	bcc.n	8000c3e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000c4a:	4a0a      	ldr	r2, [pc, #40]	; (8000c74 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000c4c:	4c0a      	ldr	r4, [pc, #40]	; (8000c78 <LoopForever+0x16>)
  movs r3, #0
 8000c4e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000c50:	e001      	b.n	8000c56 <LoopFillZerobss>

08000c52 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000c52:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000c54:	3204      	adds	r2, #4

08000c56 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000c56:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000c58:	d3fb      	bcc.n	8000c52 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000c5a:	f000 f811 	bl	8000c80 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000c5e:	f7ff fd35 	bl	80006cc <main>

08000c62 <LoopForever>:

LoopForever:
    b LoopForever
 8000c62:	e7fe      	b.n	8000c62 <LoopForever>
  ldr   r0, =_estack
 8000c64:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000c68:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000c6c:	20000010 	.word	0x20000010
  ldr r2, =_sidata
 8000c70:	08000ce8 	.word	0x08000ce8
  ldr r2, =_sbss
 8000c74:	20000010 	.word	0x20000010
  ldr r4, =_ebss
 8000c78:	2000002c 	.word	0x2000002c

08000c7c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000c7c:	e7fe      	b.n	8000c7c <ADC_IRQHandler>
	...

08000c80 <__libc_init_array>:
 8000c80:	b570      	push	{r4, r5, r6, lr}
 8000c82:	4d0d      	ldr	r5, [pc, #52]	; (8000cb8 <__libc_init_array+0x38>)
 8000c84:	4c0d      	ldr	r4, [pc, #52]	; (8000cbc <__libc_init_array+0x3c>)
 8000c86:	1b64      	subs	r4, r4, r5
 8000c88:	10a4      	asrs	r4, r4, #2
 8000c8a:	2600      	movs	r6, #0
 8000c8c:	42a6      	cmp	r6, r4
 8000c8e:	d109      	bne.n	8000ca4 <__libc_init_array+0x24>
 8000c90:	4d0b      	ldr	r5, [pc, #44]	; (8000cc0 <__libc_init_array+0x40>)
 8000c92:	4c0c      	ldr	r4, [pc, #48]	; (8000cc4 <__libc_init_array+0x44>)
 8000c94:	f000 f818 	bl	8000cc8 <_init>
 8000c98:	1b64      	subs	r4, r4, r5
 8000c9a:	10a4      	asrs	r4, r4, #2
 8000c9c:	2600      	movs	r6, #0
 8000c9e:	42a6      	cmp	r6, r4
 8000ca0:	d105      	bne.n	8000cae <__libc_init_array+0x2e>
 8000ca2:	bd70      	pop	{r4, r5, r6, pc}
 8000ca4:	f855 3b04 	ldr.w	r3, [r5], #4
 8000ca8:	4798      	blx	r3
 8000caa:	3601      	adds	r6, #1
 8000cac:	e7ee      	b.n	8000c8c <__libc_init_array+0xc>
 8000cae:	f855 3b04 	ldr.w	r3, [r5], #4
 8000cb2:	4798      	blx	r3
 8000cb4:	3601      	adds	r6, #1
 8000cb6:	e7f2      	b.n	8000c9e <__libc_init_array+0x1e>
 8000cb8:	08000ce0 	.word	0x08000ce0
 8000cbc:	08000ce0 	.word	0x08000ce0
 8000cc0:	08000ce0 	.word	0x08000ce0
 8000cc4:	08000ce4 	.word	0x08000ce4

08000cc8 <_init>:
 8000cc8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000cca:	bf00      	nop
 8000ccc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000cce:	bc08      	pop	{r3}
 8000cd0:	469e      	mov	lr, r3
 8000cd2:	4770      	bx	lr

08000cd4 <_fini>:
 8000cd4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000cd6:	bf00      	nop
 8000cd8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000cda:	bc08      	pop	{r3}
 8000cdc:	469e      	mov	lr, r3
 8000cde:	4770      	bx	lr
